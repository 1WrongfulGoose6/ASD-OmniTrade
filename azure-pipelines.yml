# Improved React CI/CD Pipeline

trigger:
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CI
    displayName: 'Continuous Integration'
    jobs:
      - job: Install_Dependencies
        displayName: 'Install Dependencies'
        steps:
          - task: UseNode@1
            inputs:
              version: '18.x'
            displayName: 'Use Node.js 18.x'

          - task: Cache@2
            displayName: 'Cache node_modules'
            inputs:
              key: 'npm | "$(Agent.OS)" | package.json'
              path: 'node_modules'
              cacheHitVar: 'NPM_CACHE_RESTORED'

          - script: npm install
            displayName: 'Install Dependencies'
            condition: ne(variables.NPM_CACHE_RESTORED, 'true')

          # Overkill for now
          # - script: npm run lint
          #   displayName: 'Run ESLint'

      - job: Test
        displayName: 'Run Unit Tests'
        steps:
          - task: UseNode@1
            inputs:
              version: '18.x'
            displayName: 'Use Node.js 18.x'

          - task: Cache@2
            displayName: 'Cache node_modules'
            inputs:
              key: 'npm | "$(Agent.OS)" | package.json'
              path: 'node_modules'
              cacheHitVar: 'NPM_CACHE_RESTORED'

          - script: npm install
            displayName: 'Install Dependencies'
            condition: ne(variables.NPM_CACHE_RESTORED, 'true')

          - script: npm test
            displayName: 'Run Jest Tests'

      - job: Build
        displayName: 'Build Application'
        steps:
          - task: UseNode@1
            inputs:
              version: '18.x'
            displayName: 'Use Node.js 18.x'

          - task: Cache@2
            displayName: 'Cache node_modules'
            inputs:
              key: 'npm | "$(Agent.OS)" | package.json'
              path: 'node_modules'
              cacheHitVar: 'NPM_CACHE_RESTORED'

          - script: npm install
            displayName: 'Install Dependencies'
            condition: ne(variables.NPM_CACHE_RESTORED, 'true')

          - script: npm run build
            displayName: 'Build React App'

          - task: CopyFiles@2
            displayName: 'Copy Files to Artifact Staging Directory'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: |
                .next/**
                public/**
                package.json
                next.config.mjs
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: WebApp'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'WebApp'
              publishLocation: 'Container'